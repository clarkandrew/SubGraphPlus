name: CI

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:4.4
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_dbms_security_procedures_unrestricted: apoc.*
          NEO4J_PLUGINS: '["apoc"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "wget http://localhost:7474 -O /dev/null -q"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 30s
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: NER weights cache
      run: |
        python - <<'PY'
        from pathlib import Path
        import shutil
        Path('models/roberta-large-ontonotes5').mkdir(parents=True, exist_ok=True)
        PY
    
    - name: Set up environment
      run: |
        mkdir -p data cache logs models config
        echo "NEO4J_URI=neo4j://localhost:7687" >> .env
        echo "NEO4J_USER=neo4j" >> .env
        echo "NEO4J_PASSWORD=password" >> .env
        echo "API_KEY_SECRET=test_key_for_ci" >> .env
        echo "TESTING=1" >> .env
        echo "DISABLE_MODELS=1" >> .env
        echo "MODEL_BACKEND=openai" >> .env
    
    - name: Wait for Neo4j
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:7474; do sleep 2; done'
    
    - name: Run linting
      run: |
        make lint
    
    - name: Run tests
      env:
        TESTING: 1
        DISABLE_MODELS: 1
        NEO4J_URI: neo4j://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password
        API_KEY_SECRET: test_key_for_ci
      run: |
        make test

  demo:
    runs-on: ubuntu-latest
    needs: lint-test
    
    services:
      neo4j:
        image: neo4j:4.4
        env:
          NEO4J_AUTH: neo4j/password
          NEO4J_dbms_security_procedures_unrestricted: apoc.*
          NEO4J_PLUGINS: '["apoc"]'
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "wget http://localhost:7474 -O /dev/null -q"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 30s
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: NER weights cache
      run: |
        python - <<'PY'
        from pathlib import Path
        import shutil
        Path('models/roberta-large-ontonotes5').mkdir(parents=True, exist_ok=True)
        PY
    
    - name: Set up environment
      run: |
        mkdir -p data cache logs models config
        echo "NEO4J_URI=neo4j://localhost:7687" >> .env
        echo "NEO4J_USER=neo4j" >> .env
        echo "NEO4J_PASSWORD=password" >> .env
        echo "API_KEY_SECRET=test_key_for_ci" >> .env
        echo "TESTING=1" >> .env
        echo "DISABLE_MODELS=1" >> .env
        echo "MODEL_BACKEND=openai" >> .env
    
    - name: Wait for Neo4j
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:7474; do sleep 2; done'
    
    - name: Run demo quickstart
      env:
        TESTING: 1
        DISABLE_MODELS: 1
        NEO4J_URI: neo4j://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password
        API_KEY_SECRET: test_key_for_ci
      run: |
        timeout 600 make demo_quickstart || echo "Demo completed or timed out" 