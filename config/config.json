{
  "application": {
    "name": "SubgraphRAG+",
    "version": "1.0.0",
    "description": "Enhanced RAG system with subgraph retrieval and multi-modal ML capabilities"
  },
  "models": {
    "backend": "mlx",
    "llm": {
      "mlx": {
        "model": "mlx-community/Qwen3-14B-8bit",
        "max_tokens": 512,
        "temperature": 0.1,
        "top_p": 0.9
      },
      "openai": {
        "model": "gpt-3.5-turbo",
        "max_tokens": 512,
        "temperature": 0.1,
        "top_p": 0.9
      },
      "huggingface": {
        "model": "mlx-community/Qwen3-14B-8bit",
        "max_tokens": 512,
        "temperature": 0.1,
        "top_p": 0.9
      }
    },
    "embeddings": {
      "model": "Alibaba-NLP/gte-large-en-v1.5",
      "backend": "transformers",
      "cache_dir": "models/embeddings/"
    },
    "mlp": {
      "model_path": "models/mlp/mlp.pth"
    },
    "information_extraction": {
      "rebel": {
        "model": "Babelscape/rebel-large",
        "type": "sequence-to-sequence",
        "description": "BART-based transformer for open-domain relation extraction",
        "purpose": "Extracts subject-predicate-object triples from raw text",
        "local_path": "models/rebel-large",
        "batch_size": 16,
        "max_length": 512,
        "device": "auto"
      }
    },
    "entity_typing": {
      "ontonotes_ner": {
        "model": "tner/roberta-large-ontonotes5",
        "type": "token-classification",
        "description": "RoBERTa-large fine-tuned for NER on OntoNotes 5.0 dataset",
        "purpose": "Predicts semantic type/class for entity mentions (18 OntoNotes types)",
        "local_path": "models/roberta-large-ontonotes5",
        "batch_size": 32,
        "device": "auto",
        "cache_size": 4096
      },
      "spacy_fallback": {
        "model": "en_core_web_sm",
        "type": "spacy-pipeline",
        "description": "spaCy English model for fallback NER",
        "purpose": "Backup entity recognition when OntoNotes model fails",
        "device": "cpu"
      }
    }
  },
  "data": {
    "faiss_index_path": "data/faiss_index.bin",
    "neo4j": {
      "default_database": "neo4j"
    }
  },
  "retrieval": {
    "token_budget": 4000,
    "max_dde_hops": 2,
    "similarity_threshold": 0.7,
    "max_results": 10
  },
  "performance": {
    "cache_size": 1000,
    "ingest_batch_size": 100,
    "api_rate_limit": 60,
    "timeout_seconds": 30
  },
  "paths": {
    "cache_dir": "cache/",
    "models_dir": "models/",
    "data_dir": "data/",
    "logs_dir": "logs/"
  }
}